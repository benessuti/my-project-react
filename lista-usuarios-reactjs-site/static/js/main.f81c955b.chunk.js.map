{"version":3,"sources":["reportWebVitals.js","pages/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserList","useState","tarefas","setTarefas","useEffect","axios","get","method","resp","data","cards","card_number","cvv","expiry_date","payment","setPayment","payName","setPayName","resul","setResul","paymentError","setpaymentError","valueCards","setValueCards","valueMoney","setValueMoney","required","setRequired","map","t","index","className","src","img","alt","name","id","username","onClick","style","display","thousandSeparator","value","onChange","e","target","prefix","inputmode","placeholder","event","substr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAaeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+CCoHCQ,MAtHf,WAGI,MAA4BC,mBAAS,IAArC,mBAAKC,EAAL,KAAcC,EAAd,KACAC,qBAAU,WACNC,IAAMC,IAAI,mDAAoD,CAC1DC,OAAQ,QACTb,MAAK,SAACc,GAAUL,EAAWK,EAAKC,WACpC,IAGH,IAAIC,EAAQ,CAER,CACEC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGf,CACEF,YAAa,mBACbC,IAAK,IACLC,YAAa,UAUnB,EAA4BZ,mBAAS,QAArC,mBAAKa,EAAL,KAAcC,EAAd,KACA,EAA4Bd,mBAAS,IAArC,mBAAKe,EAAL,KAAcC,EAAd,KACA,EAAwBhB,mBAAS,QAAjC,mBAAKiB,EAAL,KAAYC,EAAZ,KACA,EAAsClB,mBAAS,IAA/C,mBAAKmB,EAAL,KAAmBC,EAAnB,KACA,EAAkCpB,mBAAS,KAA3C,mBAAKqB,EAAL,KAAiBC,EAAjB,KACA,EAAkCtB,mBAAS,IAA3C,mBAAKuB,EAAL,KAAiBC,EAAjB,KACA,EAA8BxB,mBAAS,QAAvC,mBAAKyB,EAAL,KAAeC,EAAf,KAyCA,OACI,qCACCzB,EAAQ0B,KAAI,SAACC,EAAGC,GACb,OACA,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,iBAAiBC,IAAKH,EAAEI,IAAKC,IAAI,KAChD,sBAAKH,UAAU,YAAf,UACI,oDAAoBF,EAAEM,QACtB,qCAAQN,EAAEO,GAAV,gBAA2BP,EAAEQ,eAEjC,wBAAQC,QAAS,WAjDjC,IAAuBH,IAiD4BN,EAAEM,KAhDjDpB,EAAW,QACXE,EAAWkB,IA+CC,uBAP6B,OAAOL,MAa/C,sBAAKC,UAAU,QAAQQ,MAAO,CAACC,QAAS1B,GAAxC,UACO,mDAAqB,4BAAIE,OACzB,sBAAKe,UAAU,cAAf,UACI,cAAC,IAAD,CAAcU,mBAAmB,EAAMC,MAAOlB,EAAYmB,SApD1E,SAAqBC,GACjBnB,EAAcmB,EAAEC,OAAOH,OACvBf,EAAY,SAkDiFmB,OAAQ,MAAOC,UAAU,UAAUC,YAAY,YAChI,mBAAGT,MAAO,CAACC,QAAQd,GAAnB,qCAEJ,yBAAQgB,MAAOpB,EAAYqB,SA3EvC,SAAsBM,GAClB1B,EAAc0B,EAAMJ,OAAOH,QA0EnB,UACI,yBAAQA,MAAM,IAAd,iCAAoChC,EAAM,GAAGC,YAAYuC,QAAQ,MACjE,yBAAQR,MAAM,IAAd,iCAAoChC,EAAM,GAAGC,YAAYuC,QAAQ,SAErE,wBAAQZ,QAAS,WApDN,KAAfd,EACAG,EAAY,SAIRN,EADe,MAAfC,EACgB,GAEA,UAEpBP,EAAW,QACXI,EAAS,QACTM,EAAc,IACdE,EAAY,UAwCR,sBAIJ,sBAAKI,UAAU,QAAQQ,MAAO,CAACC,QAAStB,GAAxC,UACI,uDACA,6CAAe,iCAASE,IAAxB,gCACA,wBAAQkB,QAAS,WAxCzBnB,EAAS,SAwCD,2BC9GhBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAKFC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.f81c955b.chunk.js","sourcesContent":["  \nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import './App.css'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from \"axios\"\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nfunction UserList(){\r\n    // Função GET que está trazendo os dados da API\r\n    // useEffect, necessário para que o get execute apenas uma única vez\r\n    let [tarefas, setTarefas] = useState([])\r\n    useEffect(() => {\r\n        axios.get('https://www.mocky.io/v2/5d531c4f2e0000620081ddce', {\r\n            method: 'GET',\r\n        }).then((resp) => {setTarefas(resp.data)})\r\n    }, [])\r\n\r\n    // lista dos cartoes\r\n    let cards = [\r\n        // cartão valido\r\n        {\r\n          card_number: '1111111111111111',\r\n          cvv: 789,\r\n          expiry_date: '01/18',\r\n        },\r\n        // cartão invalido\r\n        {\r\n          card_number: '4111111111111234',\r\n          cvv: 123,\r\n          expiry_date: '01/20',\r\n        },\r\n      ];\r\n\r\n    // Função para olhar modificação e recuperar valor no selection\r\n    function handleChange(event){\r\n        setValueCards(event.target.value);\r\n    }\r\n\r\n    // Constante de ação dos modals\r\n    let [payment, setPayment] = useState(\"none\"); // Constante para abrir pagamento\r\n    let [payName, setPayName] = useState(\"\"); // Constante para pegar nome usuário\r\n    let [resul, setResul] = useState(\"none\"); // Constante para abrir recebimento\r\n    let [paymentError, setpaymentError] = useState(\"\"); // Constante para mostrar o não do recebimento\r\n    let [valueCards, setValueCards] = useState(\"1\"); // Constante para valor do selection\r\n    let [valueMoney, setValueMoney] = useState(\"\"); // Constante para valor do dinheiro\r\n    let [required, setRequired] = useState(\"none\"); // Constante para validação de campo\r\n\r\n    // Abrir o modal do pagameto\r\n    function modalPayOpen (name){\r\n        setPayment(\"flex\")\r\n        setPayName(name)\r\n    }\r\n\r\n    // Função para dinheiro\r\n    function inputChange(e){\r\n        setValueMoney(e.target.value);\r\n        setRequired(\"none\");\r\n    }\r\n\r\n    // Abrir o modal de recibo de pagamento\r\n    function modalResulOpen (){\r\n        if (valueMoney === \"\"){\r\n            setRequired(\"flex\");\r\n        }\r\n        else{\r\n            if (valueCards === \"1\"){\r\n                setpaymentError(\"\");\r\n            } else{\r\n                setpaymentError(\"não\");\r\n            }\r\n            setPayment(\"none\");\r\n            setResul(\"flex\");\r\n            setValueMoney(\"\");\r\n            setRequired(\"none\");\r\n        }\r\n        \r\n    }\r\n    \r\n    // Fechamento do modal de recibo de pagamento\r\n   function modalClose (){\r\n        setResul(\"none\");\r\n          }\r\n\r\n\r\n   // Retornando o conteúdo que será renderizado em tela\r\n   // Função map percorrendo todo o array recuperado anteriormente com o axios e listando na tela cada linha do array\r\n    return(\r\n        <>\r\n        {tarefas.map((t, index) =>{\r\n            return (\r\n            <div className=\"user-container\" key={'user'+index}>\r\n                <div className=\"user-wrapper\">\r\n                    <img className=\"user-thumbnail\" src={t.img} alt=\"\"/>\r\n                    <div className=\"user-data\">\r\n                        <p>Nome do Usuário {t.name}</p>\r\n                        <p>ID: {t.id} - Username: {t.username}</p>\r\n                    </div>\r\n                    <button onClick={()=>{modalPayOpen(t.name)}}>Pagar</button>\r\n                </div>\r\n            </div>\r\n            )\r\n        })}\r\n         {/* ----------------Modal para o pagamento------------ */}\r\n         <div className=\"modal\" style={{display: payment}}>\r\n                <span>Pagamento para <b>{payName}</b></span>\r\n                <div className=\"input-money\">\r\n                    <NumberFormat thousandSeparator={true} value={valueMoney} onChange={inputChange} prefix={'R$ '} inputmode=\"numeric\" placeholder=\"R$ 0,00\"/>\r\n                    <p style={{display:required}}>Campo obrigatório</p>\r\n                </div>\r\n                <select value={valueCards} onChange={handleChange}>\r\n                    <option value=\"1\">Cartão com final {cards[0].card_number.substr(-4)}</option>\r\n                    <option value=\"2\">Cartão com final {cards[1].card_number.substr(-4)}</option>\r\n                </select>\r\n                <button onClick={()=>{modalResulOpen ()}}>Pagar</button>\r\n            </div>\r\n\r\n            {/* -------------Modal de recibo de pagamento------------ */}\r\n            <div className=\"modal\" style={{display: resul}}>\r\n                <span>Recibo de pagamento</span>\r\n                <p>O Pagamento <strong>{paymentError}</strong> foi concluido com sucesso</p>\r\n                <button onClick={()=>{modalClose()}}>Fechar</button>\r\n            </div>\r\n      </>\r\n    )\r\n}\r\nexport default UserList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport UserList from './pages/App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n     \n    <UserList/>\n     \n\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}